version: '3.7'
x-images:
  x-base: &base {restart: unless-stopped, env_file: [.env]}
  depends_on: [log]
services:
  log:
    <<: [ *base ]
    image: corpusops/rsyslog
    volumes: [logs:/var/log]
    ports: ["127.0.0.1:45713:10514"]
    depends_on: []
  setup-services:
    <<: [ *base ]
    logging: {driver: syslog, options: {tag: "setup", syslog-address: "tcp://127.0.0.1:45713"}}
    image: "${SERVICES_IMAGE}"
    entrypoint:
    - /bin/sh
    - '-exc'
    - |-
      mkdir -pv /helpers/alpine >/dev/null 2>&1|| true
      cp -rfv /cops_helpers/. /helpers/alpine
      while true;do printf "HTTP/1.1 200 OK\n\nS"| ( nc -l -p 80 || /bin/true);done
    logging: {driver: syslog, options: {tag: "setup", syslog-address: "tcp://127.0.0.1:45713"}}
    volumes: [helpers:/helpers]
  mbtileserver: &services_mbtileserver
    <<: [ *base ]
    logging: {driver: syslog, options: {tag: "front", syslog-address: "tcp://127.0.0.1:45713"}}
    image: "${MBS_IMAGE}"
    ports: ["${LISTENING_INT_IF}:${LISTENING_INT_PORT}:8080"]
    entrypoint:
    - /bin/sh
    - '-exc'
    - |
      export PATH=/helpers/alpine:$PATH
      while ! ( dockerize --version >/dev/null 2>&1 );do echo waithelp;sleep 1;done
      SVC_STARTUP_TIMEOUT=$${MYSQL_STARTUP_TIMEOUT:-45s}
      dockerize -wait http://setup-services -timeout $${SVC_STARTUP_TIMEOUT}
      echo "Configuring $$f" >&2
      /mbtileserver $$@
    volumes: ["$TILES_DATA_DIR:/tiles", helpers:/helpers]
  front:
    <<: [ *base ]
    depends_on: [log, mbtileserver]
    logging: {driver: syslog, options: {tag: "front", syslog-address: "tcp://127.0.0.1:45713"}}
    image: corpusops/nginx:1.21-alpine
    ports: ["${LISTENING_IF}:${LISTENING_PORT}:80"]
    entrypoint:
    - bash
    - "-exc"
    - |-
      cp -vrf /etc/nginx.d/. /etc/nginx
      ( cd /etc/nginx && while read f;do echo "gen $$f"; \
          j=$$(echo $$f|sed -re "s/[.].?frep//g");frep $$f:$$j --overwrite; \
        done < <(find -type f -name "*frep"); )
      exec nginx -g "daemon off;"
    volumes: [./nginx:/etc/nginx.d]
{% if mbtileserver_has_ftp %}
  ftp:
    <<: [ *base ]
    depends_on: [log]
    image: 'corpusops/pureftpd'
    ports:
    - "${LISTENING_IF}:${FTP_PORT}:21"
    - "${LISTENING_IF}:${FTP_PORT_RANGE}:${FTP_PORT_RANGE}"
    environment: &ftp_env
      ADDED_FLAGS: "-O w3c:/var/log/pure-ftpd/transfer.log"
    volumes:
    - ftp-pw:/etc/pure-ftpd/passwd
    - ftp-ssl:/etc/ssl/private
    - ftp-log:/var/log/pure-ftpd
    - "$TILES_DATA_DIR:/tiles"
{% endif %}
volumes:
  logs:
  helpers:
{% if mbtileserver_has_ftp %}
  ftp-pw:
  ftp-ssl:
  ftp-log:
{% endif %}
